# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, not like vim anymore
set $left j
set $down k
set $up l
set $right Semicolon

# Your preferred terminal emulator
set $term terminator

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --

set $menu rofi -show drun | xargs swaymsg exec --
set $calc rofi -show calc -no-show-match -no-sort

include /etc/sway/config-vars.d/*

font pango:System San Francisco Display 13

# Turn off title bars
default_border none

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
      timeout 300 'swaylock -f -c 000000' \
      timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
      before-sleep 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }

# Remap caps-lock key to another ctrl key
input "type:keyboard" {
    xkb_layout us
    xkb_variant ,nodeadkeys
    xkb_options caps:ctrl_modifier
}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+Ctrl+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Start calculator; rofi plugin, build from source: https://github.com/svenstaro/rofi-calc
    bindsym $mod+c exec $calc

    # Screenshot a window, monitor, region
    # bindsym $mod+Shift+p exec ~/.config/sway/sway-screenshot -m window
    # bindsym $mod+Shift+Ctrl+p exec ~/.config/sway/sway-screenshot -m output
    bindsym $mod+p exec ~/.config/sway/sway-screenshot --silent --clipboard-only -m region

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # Add user to video group, logout: sudo usermod -a -G video rhow
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 1%+

    # Close all notifications
    bindsym $mod+t exec dunstctl close-all
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    set $w1 1:Main
    set $w2 2:Comm
    set $w3 3:IDE
    set $w4 4:Term
    set $w5 5:Pithos
    set $w6 6:Six
    set $w7 7:Seven
    set $w8 8:Eight
    set $w9 9:Nine
    set $w10 10:Ten

    # Switch to workspace
    bindsym $mod+1 workspace number $w1
    bindsym $mod+2 workspace number $w2
    bindsym $mod+3 workspace number $w3
    bindsym $mod+4 workspace number $w4
    bindsym $mod+5 workspace number $w5
    bindsym $mod+6 workspace number $w6
    bindsym $mod+7 workspace number $w7
    bindsym $mod+8 workspace number $w8
    bindsym $mod+9 workspace number $w9
    bindsym $mod+0 workspace number $w10

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number $w1
    bindsym $mod+Shift+2 move container to workspace number $w2
    bindsym $mod+Shift+3 move container to workspace number $w3
    bindsym $mod+Shift+4 move container to workspace number $w4
    bindsym $mod+Shift+5 move container to workspace number $w5
    bindsym $mod+Shift+6 move container to workspace number $w6
    bindsym $mod+Shift+7 move container to workspace number $w7
    bindsym $mod+Shift+8 move container to workspace number $w8
    bindsym $mod+Shift+9 move container to workspace number $w9
    bindsym $mod+Shift+0 move container to workspace number $w10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %I:%M'; do sleep 5; done
    # status_command python3 ~/.config/sway/bar-status.py
    # apt-get install py3status
    status_command py3status -c ~/.config/sway/sway-status.conf | ~/.config/sway/wrapper.py

    colors {
        statusline #B1DE00
        background #323232
        # inactive_workspace #32323200 #32323200 #5c5c5c
	    urgent_workspace   #2f343a #900000 #ffffff
    }
}

include /etc/sway/config.d/*

# nm-applet lack of menu: https://github.com/swaywm/sway/issues/1357
exec_always nm-applet --indicator
exec dropbox start
exec blueman-applet

# assign windows to specific workspace by using the app_id
# new term's will only open in workspace, can move to container to different workspace
# assign [app_id="terminator"] workspace $w4
# exec $term

assign [app_id="sublime_text"] workspace $w3
exec subl

# "name": "Google Chat - Chat",
exec swaymsg "workspace $w1; exec google-chrome-stable"
exec swaymsg "workspace $w1; exec google-chrome-stable --incognito https://mail.google.com/"
